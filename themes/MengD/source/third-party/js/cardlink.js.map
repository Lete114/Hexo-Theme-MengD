{"version":3,"file":"cardlink.js","sources":["../src/main.js"],"sourcesContent":["import styles from './main.css'\n\nconst style = createElement('style')\nstyle.textContent = styles\ndocument.head.appendChild(style)\n\n/**\n * Determine if it is a ['https://', 'http://', '//'] protocol\n * @param {String} url Website url\n * @returns {Boolean}\n */\nfunction isHttp(url) {\n  return /^(https?:)?\\/\\//g.test(url)\n}\n\n/**\n * Creating element\n * @param {String} name Element Name\n * @param {String} className Element className\n * @returns {HTMLElement}\n */\nfunction createElement(name, className) {\n  const dom = document.createElement(name)\n  if (className) dom.className = className\n  return dom\n}\n\n/**\n * Creates svg element\n * @param {String} name Element Name\n * @returns {SVGElementTagNameMap}\n */\nfunction createSVG(name) {\n  return document.createElementNS('http://www.w3.org/2000/svg', name)\n}\n\n/**\n * Set element attribute\n * @param {HTMLElement} el Element\n * @param {Object} obj Objects of key-value pairs\n */\nfunction setAttribute(el, obj) {\n  for (const key in obj) el.setAttribute(key, obj[key])\n}\n\n/**\n * Append child node or element\n * @param {HTMLElement} el Element\n * @param {Node} child The node to append to the given parent node (commonly an element).\n */\nfunction appendChild(el, child) {\n  el.appendChild(child)\n}\n\n/**\n * Create card link icon\n * @param {String} icon Icon URL\n * @returns {SVGElementTagNameMap}\n */\nfunction createIcon(icon) {\n  const svg = createSVG('svg')\n  svg.classList.add('card-link-icon')\n  svg.style.background = '#ebebeb'\n  setAttribute(svg, { fill: '#d4d4d4', viewBox: '0 0 1024 1024' })\n  const path = createSVG('path')\n\n  setAttribute(path, {\n    // eslint-disable-next-line max-len\n    d: 'M177.152 384a357.546667 357.546667 0 0 0-23.552 128 357.546667 357.546667 0 0 0 23.552 128h140.245333a791.808 791.808 0 0 1-10.197333-128c0-44.714667 3.584-87.722667 10.197333-128H177.152z m24.405333-51.2h126.250667c15.786667-65.024 40.021333-120.405333 69.76-160.554667A359.466667 359.466667 0 0 0 201.557333 332.8zM844.8 378.709333V384h-138.197333c6.613333 40.277333 10.197333 83.285333 10.197333 128s-3.584 87.722667-10.197333 128H844.8v5.290667c16.512-41.216 25.6-86.186667 25.6-133.290667a357.418667 357.418667 0 0 0-25.6-133.290667zM822.442667 332.8a359.466667 359.466667 0 0 0-196.010667-160.554667c29.738667 40.149333 53.930667 95.573333 69.76 160.554667h126.293333zM369.365333 384a736.042667 736.042667 0 0 0-10.965333 128c0 45.354667 3.968 88.448 10.965333 128h285.269334c6.997333-39.552 10.965333-82.645333 10.965333-128s-3.968-88.448-10.965333-128H369.365333z m11.264-51.2h262.741334c-28.586667-108.032-80.725333-179.2-131.370667-179.2-50.645333 0-102.741333 71.168-131.370667 179.2z m-179.072 358.4a359.466667 359.466667 0 0 0 196.010667 160.554667c-29.738667-40.149333-53.930667-95.573333-69.76-160.554667h-126.293333z m620.885334 0h-126.250667c-15.786667 65.024-40.021333 120.405333-69.76 160.554667a359.466667 359.466667 0 0 0 196.010667-160.554667z m-441.813334 0c28.586667 108.032 80.725333 179.2 131.370667 179.2 50.645333 0 102.741333-71.168 131.370667-179.2H380.629333zM512 921.6a409.6 409.6 0 1 1 0-819.2 409.6 409.6 0 0 1 0 819.2z'\n  })\n  appendChild(svg, path)\n\n  const img = createElement('img', 'card-link-icon')\n  img.src = icon\n\n  // If icon is valid, replace `svgIcon` with `imgIcon`\n  img.onload = function () {\n    img.onload = null\n    svg.parentNode.replaceChild(img, svg)\n  }\n  return svg\n}\n\n/**\n * Creating a Document Object Model\n * @param {String} title Website title\n * @param {String} link Website address\n * @param {String} icon Website icon\n * @returns {HTMLElement}\n */\n// eslint-disable-next-line max-statements\nfunction createDOM(title, link, icon) {\n  const wrapDOM = createElement('div', 'card-link')\n  const iconDOM = createIcon(icon)\n\n  const aDOM = createElement('a', 'card-link-content')\n  aDOM.href = link\n\n  const textDOM = createElement('div', 'card-link-text')\n\n  const titleDOM = createElement('span', 'card-link-title')\n  titleDOM.textContent = title\n\n  const linkDOM = createElement('span', 'card-link-url')\n\n  const linkSvgDOM = createSVG('svg')\n  setAttribute(linkSvgDOM, {\n    width: 14,\n    height: 14,\n    viewBox: '0 0 24 24',\n    fill: 'currentColor'\n  })\n\n  const linkPathDOM = createSVG('path')\n  setAttribute(linkPathDOM, {\n    // eslint-disable-next-line max-len\n    d: 'M5.327 18.883a3.005 3.005 0 010-4.25l2.608-2.607a.75.75 0 10-1.06-1.06l-2.608 2.607a4.505 4.505 0 006.37 6.37l2.608-2.607a.75.75 0 00-1.06-1.06l-2.608 2.607a3.005 3.005 0 01-4.25 0zm5.428-11.799a.75.75 0 001.06 1.06L14.48 5.48a3.005 3.005 0 014.25 4.25l-2.665 2.665a.75.75 0 001.061 1.06l2.665-2.664a4.505 4.505 0 00-6.371-6.372l-2.665 2.665zm5.323 2.117a.75.75 0 10-1.06-1.06l-7.072 7.07a.75.75 0 001.061 1.06l7.071-7.07z'\n  })\n\n  appendChild(linkSvgDOM, linkPathDOM)\n  appendChild(linkDOM, linkSvgDOM)\n  appendChild(linkDOM, document.createTextNode(link))\n\n  appendChild(textDOM, titleDOM)\n  appendChild(textDOM, linkDOM)\n  appendChild(aDOM, textDOM)\n  appendChild(aDOM, iconDOM)\n  appendChild(wrapDOM, aDOM)\n  return wrapDOM\n}\n\n/**\n * Get info\n * @param {Element} el Element\n * @param {String} html String type html\n * @param {String} link Website address\n */\n// eslint-disable-next-line max-statements\nfunction getInfo(el, html, link) {\n  let title, icon\n  const doc = new DOMParser().parseFromString(html, 'text/html')\n  // If there is no title, no card link is generated\n  title = doc.querySelector('title')\n  if (title) {\n    title = title.textContent\n\n    // Get the src of the first img tag in the body tag\n    icon = doc.querySelector('body img')\n    icon = icon && icon.getAttribute('src')\n\n    if (/^data:image/.test(icon)) icon = ''\n\n    // If there is no src then get the site icon\n    if (!icon) {\n      const links = [].slice.call(doc.querySelectorAll('link[rel][href]'))\n      icon = links.find((_el) => _el.rel.includes('icon'))\n      icon = icon && icon.getAttribute('href')\n    }\n\n    // If `icon` is not the ['https://', 'http://', '//'] protocol, splice on the `origin` of the a tag\n    if (!isHttp(icon)) icon = new URL(link).origin + icon\n\n    const dom = createDOM(title, link, icon)\n\n    // Reset the attribute\n    Array.from(el.attributes).forEach((attr) => {\n      dom.querySelector('a').setAttribute(attr.name, attr.value)\n    })\n    el.parentNode.replaceChild(dom, el)\n  }\n}\n\nfunction fetchPage(link, callback) {\n  fetch(link)\n    .then((result) => result.text())\n    .then(callback)\n    .catch((error) => {\n      const server = cardLink.server\n      // eslint-disable-next-line no-console\n      if (link.includes(server) || !server) return console.error('CardLink Error:', error)\n      fetchPage(server + link, callback)\n    })\n}\n\n/**\n * Create card links\n * @param {NodeList} nodes A collection of nodes or a collection of arrays, if it is an array then the array must always contain node element\n */\nexport default function cardLink(nodes) {\n  // If the `nodes` do not contain a `forEach` method, then the default `a[cardlink]` is used\n  nodes = 'forEach' in (nodes || {}) ? nodes : document.querySelectorAll('a[cardlink]')\n  nodes.forEach((el) => {\n    // If it is not a tag element then it is not processed\n    if (el.nodeType !== 1) return\n    el.removeAttribute('cardlink')\n    const link = el.href\n    if (isHttp(link)) {\n      fetchPage(link, (html) => {\n        getInfo(el, html, link)\n      })\n    }\n  })\n}\n"],"names":["style","createElement","isHttp","url","test","name","className","dom","document","createSVG","createElementNS","setAttribute","el","obj","key","appendChild","child","createDOM","title","link","icon","wrapDOM","iconDOM","svg","classList","add","background","fill","viewBox","path","d","img","src","onload","parentNode","replaceChild","createIcon","aDOM","href","textDOM","titleDOM","textContent","linkDOM","linkSvgDOM","width","height","linkPathDOM","createTextNode","fetchPage","callback","fetch","then","result","text","error","server","cardLink","includes","console","nodes","querySelectorAll","forEach","nodeType","removeAttribute","html","doc","DOMParser","parseFromString","querySelector","getAttribute","slice","call","find","_el","rel","URL","origin","Array","from","attributes","attr","value","getInfo","head"],"mappings":"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"}